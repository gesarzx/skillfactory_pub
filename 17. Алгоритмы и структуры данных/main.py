# # import math
# #
# # n = 10000
# # one = n ** 2  # O(n^2)
# # two = n * math.log2(n)  # O(n * log(n))
# #
# # print(round(one / two))
#
# # Во сколько раз (примерно) возрастет время работы алгоритма сложностью O(n^2) по сравнению
# # с O(n*log(n)) на входных данных размера n=10000?
# # Ответ округлите до целого. Помните также, что логарифм берется по основанию 2.
#
#
# # **********
# # Попробуем создать обработчик задач на бесконечном цикле с использованием очереди:
# N_max = int(input("Определите размер очереди:"))
#
# queue = [0 for _ in range(N_max)]  # инициализируем список с нулевыми элементами
# order = 0  # будем хранить сквозной номер задачи
# head = 0  # указатель на начало очереди
# tail = 0  # указатель на элемент следующий за концом очереди
#
# while True:
#     cmd = input("Введите команду:")
#     if cmd == "empty":
#         if is_empty():
#             print("Очередь пустая")
#         else:
#             print("В очереди есть задачи")
#     elif cmd == "size":
#         print("Количество задач в очереди:", size())
#     elif cmd == "add":
#         if size() != N_max:
#             add()
#         else:
#             print("Очередь переполнена")
#     elif cmd == "show":
#         if is_empty():
#             print("Очередь пустая")
#         else:
#             show()
#     elif cmd == "do":
#         if is_empty():
#             print("Очередь пустая")
#         else:
#             do()
#     elif cmd == "exit":
#         for _ in range(size()):
#             do()
#         print("Очередь пустая. Завершение работы")
#         break
#     else:
#         print("Введена неверная команда")

# import math
# a=math.factorial(100)
# # print(len(str(a)))